<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="indi.tammy.qb.dao.QuestionDao">

	<insert id="insert" parameterType="indi.tammy.qb.model.Question" useGeneratedKeys="true" keyProperty="id">
		insert into qb_temp_qbank(content, analysis, answer, type, isFull, hardness, submit_time, subject_id) values(#{content},#{analysis}, #{answer}, #{type}, #{isFull}, #{hardness}, #{submit_time}, #{subject_id})
	</insert>
	
	<insert id="formalModifyQuestion" parameterType="indi.tammy.qb.model.Question" useGeneratedKeys="true" keyProperty="id">
		insert into qb_formal_qbank(content, analysis, answer, type, isFull, hardness, submit_time, subject_id) values(#{content},#{analysis}, #{answer}, #{type}, #{isFull}, #{hardness}, #{submit_time}, #{subject_id})
	</insert>
	
	<insert id="formalInsert" parameterType="indi.tammy.qb.model.Question" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO qb_formal_qbank (
			content,
			analysis,
			answer,
			type,
			isFull,
			hardness,
			submit_time,
			subject_id
		) SELECT
			content,
			analysis,
			answer,
			type,
			isFull,
			hardness,
			submit_time,
			subject_id
		FROM
			qb_temp_qbank
		WHERE
			qb_temp_qbank.id = #{id}
	</insert>
	
	<insert id="formalInsertKnowQuestion" keyProperty="id">
		INSERT INTO qb_formal_knowQuestion (question_id, know_id) SELECT
			${formal_id},
			qb_temp_knowQuestion.know_id
		FROM
			qb_temp_knowQuestion
		WHERE
			qb_temp_knowQuestion.question_id = #{temp_id}
	</insert>
	
	<insert id="formalCopyKnowQuestionByQId" keyProperty="id">
		INSERT INTO qb_formal_knowQuestion (question_id, know_id) SELECT
			${new_id},
			qb_formal_knowQuestion.know_id
		FROM
			qb_formal_knowQuestion
		WHERE
			qb_formal_knowQuestion.question_id = #{old_id}
	</insert>
	
	<insert id="insertKnowQuestion" keyProperty="id">
		insert into qb_temp_knowQuestion(question_id, know_id) values(#{question_id},#{know_id})
	</insert>
	
	<insert id="formalModifyKnowQuestion" keyProperty="id">
		insert into qb_fromal_knowQuestion(question_id, know_id) values(#{question_id},#{know_id})
	</insert>
	
	<insert id="insertWrongQuestion" keyProperty="id">
		insert into qb_wrong_question(question_id, wrong_type, wrong_message) values(#{question_id},#{wrong_type}, #{wrong_message})
	</insert>
	
	<delete id="delete" parameterType="int">
         delete from qb_temp_qbank where id=#{id};
         delete from qb_temp_knowQuestion where question_id=#{id}
    </delete>
    
    <delete id="formalDelete" parameterType="int">
         delete from qb_formal_qbank where id=#{id};
         delete from qb_formal_knowQuestion where question_id=#{id}
         delete from qb_wrong_question where question_id=#{id}
         delete from qb_similar_question where question_id=#{id}
         delete from qb_similar_question where sim_id=#{id}
    </delete>
    
    <delete id="deleteKnowQuestionByQId" parameterType="int">
         delete from qb_temp_knowQuestion where question_id=#{id}
    </delete>
    
     <delete id="deleteSimQuestionByQId" parameterType="int">
         delete from qb_similar_question where question_id=#{id}
    </delete>
    
    <delete id="deleteWrongQuestionById" parameterType="int">
         delete from qb_wrong_question where id=#{id}
    </delete>
    
    <update id="update" parameterType="indi.tammy.qb.model.Question">
         UPDATE qb_temp_qbank SET content=#{content}, answer=#{answer}, analysis=#{analysis}, type=#{type}, subject_id=#{subject_id}
         WHERE id=#{id}
    </update>
    
    <select id="findBySubject" resultType="indi.tammy.qb.model.Question" >
		SELECT
			TOP ${pEnd} *
		FROM
			(
			SELECT
				qb_temp_qbank.*, dbo.AggregateString (qb_temp_qbank.id) know_name,
				qb_question_type.type_name,
				row_number () OVER (ORDER BY qb_temp_qbank.id) n,
				COUNT (*) OVER () total
			FROM
				qb_temp_qbank
				INNER JOIN qb_question_type ON qb_temp_qbank.type = qb_question_type.type
			WHERE
				subject_id = #{subject_id}
			) t1
		WHERE
			t1.n >= #{pStart}
	</select>
	
	<select id="getTypeId" parameterType="String" resultType="int" >
		select type from qb_question_type where type_name=#{type_name}
	</select>
	
	<select id="formalFindByParam" resultType="indi.tammy.qb.model.Question" >
		SELECT TOP ${pEnd}
			*, COUNT (*) OVER () total
		FROM
		(
		SELECT 
		qb_formal_qbank.*, 
		t2.name know_name, 
		row_number () OVER (ORDER BY qb_formal_qbank.id) n,
		qb_question_type.type_name
		FROM
			(
			SELECT
				t1.question_id,
				t1.subject_name,
				dbo.FormalAggregateString (t1.question_id) name
			FROM
				(
				SELECT
					qb_formal_knowQuestion.question_id,
					TB_Subject.name subject_name
				FROM
					TB_Know	
					INNER JOIN TB_Subject ON TB_Subject.id = TB_Know.subjectid
					AND TB_Subject.id = #{subject_id}
					<if test = "know_id >= 0">
						AND TB_Know.id = #{know_id}
					</if>
					
					<if test = "grade_id >= 0">
						INNER JOIN TB_KnowGrad ON TB_Know.id = TB_KnowGrad.knowid
						AND TB_KnowGrad.grade = #{grade_id}
					</if>
					
					<if test = "area_id >= 0">
						INNER JOIN TB_KnowArea ON TB_Know.id = TB_KnowArea.knowid
						AND TB_KnowArea.areaid = #{area_id}
					</if>
					
					<if test = "standard_id >= 0">
						INNER JOIN TB_KnowStandard ON TB_Know.id = TB_KnowStandard.knowid
						AND TB_KnowStandard.standard = #{standard_id}
					</if>
					
					<if test = "standard_id >= 0">
						INNER JOIN TB_KnowStandard ON TB_Know.id = TB_KnowStandard.knowid
						AND TB_KnowStandard.standard = #{standard_id}
					</if>
					INNER JOIN qb_formal_knowQuestion ON TB_Know.id = qb_formal_knowQuestion.know_id			
				) t1
			GROUP BY
				t1.question_id,
				t1.subject_name
			) AS t2, qb_formal_qbank, qb_question_type
		WHERE 
		t2.question_id = qb_formal_qbank.id 
		AND qb_formal_qbank.type = qb_question_type.type
		<if test = "type_id >= 0">
			AND qb_formal_qbank.type = #{type_id}
		</if>
		
		<if test = "hardness >= 0">
			AND qb_formal_qbank.hardness = #{hardness}
		</if>
		
		<if test = "key != null">
			AND qb_formal_qbank.content LIKE '${key}'
		</if>) t3
		WHERE t3.n >= #{pStart}
	</select>	
	
	<select id="findById" parameterType="int" resultType="indi.tammy.qb.model.Question" >
		SELECT
			qb_temp_qbank.*, t1.subjectid subject_id,
			t1.know_name
		FROM
			(
			SELECT
				qb_temp_qbank.id,
				TB_Know.subjectid,
				dbo.AggregateString (qb_temp_qbank.id) know_name
			FROM
				qb_temp_qbank
				INNER JOIN qb_temp_knowQuestion ON qb_temp_qbank.id = #{id}
				AND qb_temp_qbank.id = qb_temp_knowQuestion.question_id
				INNER JOIN TB_Know ON qb_temp_knowQuestion.know_id = TB_Know.id
			GROUP BY
				qb_temp_qbank.id,
				subjectid
			) t1,
			qb_temp_qbank
		WHERE
			t1.id = qb_temp_qbank.id
	</select>
	
	<select id="formalFindById" parameterType="int" resultType="indi.tammy.qb.model.Question" >
		SELECT
			qb_formal_qbank.*, dbo.FormalAggregateString (id) know_name
		FROM
			qb_formal_qbank
		WHERE
			id = #{id}
	</select>
	
	<select id="findHaveSimQuestionBySubjectId" resultType="indi.tammy.qb.model.Question" >
		SELECT
			TOP ${pEnd} *
		FROM
			(
			SELECT
				qb_formal_qbank.*, qb_question_type.type_name,COUNT (*) OVER () total,
				row_number () OVER (ORDER BY qb_formal_qbank.id) n,dbo.formalAggregateString(qb_formal_qbank.id) know_name
			FROM
				qb_similar_question
				INNER JOIN qb_formal_qbank ON qb_formal_qbank.subject_id = #{subject_id}
				AND qb_formal_qbank.id = qb_similar_question.question_id
				INNER JOIN qb_question_type ON qb_formal_qbank.id=qb_question_type.type
			) t1
		WHERE
			t1.n >= #{pStart}
	</select>

	<select id="findSimQuestionByQId" resultType="indi.tammy.qb.model.Question" >
		SELECT TOP ${pEnd} *
		FROM
			(
			SELECT
				qb_formal_qbank.*, qb_question_type.type_name,
				dbo.FormalAggregateString (qb_formal_qbank.id) know_name,
				COUNT (*) OVER () total, row_number() over(ORDER BY qb_formal_qbank.id) n
			FROM
				qb_similar_question
				INNER JOIN qb_formal_qbank ON qb_similar_question.question_id = #{question_id}
				INNER JOIN qb_question_type ON qb_formal_qbank.type = qb_question_type.type
				AND qb_similar_question.sim_id = qb_formal_qbank.id) t1
			WHERE t1.n >= #{pStart}
	</select>		
	
	<select id="findWrongQuestionBySubjectId" resultType="indi.tammy.qb.model.Question" >
		SELECT
			TOP ${pEnd} *
		FROM
			(
			SELECT
				qb_formal_qbank.*, qb_question_type.type_name,COUNT (*) OVER () total,
				row_number () OVER (ORDER BY qb_formal_qbank.id) n,dbo.formalAggregateString(qb_formal_qbank.id) know_name,
				qb_wrong_question.wrong_type, qb_wrong_question.wrong_message, qb_wrong_type.wrong_type_name,
				qb_wrong_question.id wrong_id
			FROM
				qb_wrong_question
				INNER JOIN qb_formal_qbank ON qb_formal_qbank.subject_id = #{subject_id}
				AND qb_formal_qbank.id = qb_wrong_question.question_id
				INNER JOIN qb_question_type ON qb_formal_qbank.id=qb_question_type.type
				INNER JOIN qb_wrong_type ON qb_wrong_question.wrong_type=qb_wrong_type.wrong_type
			) t1
		WHERE
			t1.n >= #{pStart}
	</select>							
</mapper>